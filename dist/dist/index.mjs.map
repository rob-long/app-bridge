{"version":3,"file":"index.mjs","sources":["../../src/AppBridge.ts","../../src/AppBridgeService.ts","../../src/useAppBridge.ts"],"sourcesContent":["import { BehaviorSubject, Subscription } from 'rxjs';\n\nexport interface WindowWithSubjectManager extends Window {\n  _subjectManager: Record<string, BehaviorSubject<any>>;\n}\n\ndeclare const window: WindowWithSubjectManager;\n\nclass AppBridge {\n  constructor() {\n    if (!window._subjectManager) {\n      window._subjectManager = {};\n    }\n  }\n\n  getSubject<T>(name: string): BehaviorSubject<T | null> {\n    if (!window._subjectManager[name]) {\n      window._subjectManager[name] = new BehaviorSubject(null);\n    }\n    return window._subjectManager[name];\n  }\n\n  updateSubject<T>(name: string, newState: T): void {\n    if (!window._subjectManager[name]) {\n      window._subjectManager[name] = new BehaviorSubject<T>(newState);\n    } else {\n      this.getSubject(name).next(newState);\n    }\n  }\n\n  getValue<T>(name: string): T | null {\n    const subject = this.getSubject<T>(name);\n    return subject.getValue();\n  }\n\n  subscribe<T>(\n    name: string,\n    observer: {\n      next?: (value: T | null) => void;\n      error?: (error: any) => void;\n      complete?: () => void;\n    },\n  ): Subscription {\n    try {\n      return this.getSubject<T>(name).subscribe(observer);\n    } catch (err) {\n      console.error(`Error subscribing to subject ${name}:`, err);\n      if (observer.error) observer.error(err);\n      throw err; // Re-throw to ensure the caller knows something went wrong\n    }\n  }\n}\n\nconst Singleton = new AppBridge();\nexport default Singleton;\n","import angular from 'angular';\nimport AppBridge from './AppBridge.ts';\n\nconst appBridgeService = angular\n  .module('myApp', [])\n  .factory('AppBridgeService', [\n    '$rootScope',\n    function ($rootScope: angular.IRootScopeService) {\n      return {\n        getSubject: <T>(name: string) => AppBridge.getSubject<T>(name),\n        getValue: <T>(name: string) => AppBridge.getValue<T>(name),\n        updateSubject: <T>(name: string, newState: T) =>\n          AppBridge.updateSubject<T>(name, newState),\n        subscribe: <T>(name: string, next: (newState: T) => void) => {\n          const subscription = AppBridge.subscribe(name, {\n            next: (newState) => {\n              $rootScope.$apply(() => {\n                next(newState as T);\n              });\n            },\n          });\n          return () => subscription.unsubscribe();\n        },\n      };\n    },\n  ]);\n\nexport default appBridgeService;\n","import { useEffect, useState } from 'react';\nimport type { SetStateAction } from 'react';\nimport AppBridge from './AppBridge.ts';\n\nconst useAppBridge = <T>(subjectName: string) => {\n  const [state, setState] = useState<T | null>(\n    AppBridge.getValue<T>(subjectName),\n  );\n\n  useEffect(() => {\n    const subscription = AppBridge.subscribe(subjectName, {\n      next: (newState: SetStateAction<T | null>) => {\n        setState(newState);\n      },\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [subjectName]);\n\n  const updateState = (newState: T) => {\n    AppBridge.updateSubject(subjectName, newState);\n  };\n\n  return [state, updateState] as const;\n};\n\nexport default useAppBridge;\n"],"names":["AppBridge"],"mappings":"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"}